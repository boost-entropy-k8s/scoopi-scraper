locatorGroups:

  quoteGroup:   
    locators: [
       { name: acme, url: "/defs/examples/page/acme-quote-links.html" }  
    ]

taskGroups:

  quoteGroup:
    
    linkTask:
      dataDef: links
      steps:
        htmlUnitDefault:
          process:
            class: "org.codetab.scoopi.step.convert.LocatorCreator"
            previous: parser
            next: seeder

  bsGroup:

    bsTask:
      dataDef: bs
      steps:
        htmlUnitDefault:
          converter:
            class: "org.codetab.scoopi.step.convert.DataConverter"
            previous: process
            next: appender           
            plugins: [
              plugin: { 
                     name: converter, 
                     class: "org.codetab.scoopi.plugin.converter.DateRoller", 
                     axis: col, 
                     inPattern: "MMM ''YY", 
                     outPattern: "yyyy-MM-dd", 
                     roll: "DAY_OF_MONTH=ceil" }            
           ]

  plGroup:

    plTask:
      dataDef: pl
      steps:
        htmlUnitDefault:
          converter:
            class: "org.codetab.scoopi.step.convert.DataConverter"
            previous: process
            next: appender           
            plugins: [
              plugin: { 
                     name: converter, 
                     class: "org.codetab.scoopi.plugin.converter.DateRoller", 
                     axis: col, 
                     inPattern: "MMM ''YY", 
                     outPattern: "yyyy-MM-dd", 
                     roll: "DAY_OF_MONTH=ceil" }            
           ]      
                 

dataDefs:

  links:
    axis:
      fact:
        query:
          region: "//div[@id='page_links']/table" 
          field: "tbody/tr/td[4]/ul/li[%{row.index}]/a/@href"                  
        prefix: [ "/defs/examples/page/" ]   
      col:
        query:
          script: "configs.getRunDateTime()"                  
        items: [ 
          item: {name: date},
        ]  
      row:
        query:
          region: "//*[@id='page_links']/table"
          field: "tbody/tr/td[4]/ul/li[%{row.index}]/a"      
        items: [ 
          item: {name: bs, index: 2, linkGroup: bsGroup},                   
          item: {name: pl, index: 3, linkGroup: plGroup},
        ]

  bs:
    axis:
      fact:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Total Share Capital')]/ancestor::table[1]"   
          field: "*//*[.='%{row.value}']/following-sibling::td[%{col.index}-1]"  
      col:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Total Share Capital')]/ancestor::table[1]"
          field: "*//tr[1]/td[%{col.index}]"        
        items: [ 
          item: {name: year, indexRange: 2-6},
        ]  
      row:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Total Share Capital')]/ancestor::table[1]" 
          field: "*//tr[%{row.index}+1]/td[1]"      
        items: [ 
          item: {name: item, index: 5, breakAfter: ["Book Value (Rs)"] },
        ]
        filters: [ 
          filter: { type: value, pattern: "" },
          filter: { type: value, pattern: "Sources Of Funds" },
          filter: { type: value, pattern: "Application Of Funds" },                   
        ]

  pl:
    axis:
      fact:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Employee Cost')]/ancestor::table[1]" 
          field: "*//*[.='%{row.value}']/following-sibling::td[%{col.index}-1]"  
      col:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Employee Cost')]/ancestor::table[1]"
          field: "*//tr[1]/td[%{col.index}]"       
        items: [ 
          item: {name: year, indexRange: 2-6},
        ]  
      row:
        query:
          region: "//table//*[count(*)=0 and contains(.,'Employee Cost')]/ancestor::table[1]"
          field: "*//tr[%{row.index}+0]/td[1]" 
        items: [ 
          item: {name: item, index: 6, breakAfter: ["Book Value (Rs)"] },
        ]
        filters: [ 
          filter: { type: value, pattern: "" },
          filter: { type: value, pattern: "Expenditure" },
          filter: { type: value, pattern: "Per share data (annualised)" },       
        ]       
